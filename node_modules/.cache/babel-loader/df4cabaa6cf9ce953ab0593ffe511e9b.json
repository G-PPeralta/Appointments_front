{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nexport const useAppointments = () => {\n  _s();\n\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(undefined);\n\n  require('dotenv').config(); // const URL = process.env.BACKEND_URL;\n\n\n  useEffect(() => {\n    setLoading(true);\n    fetch('http://localhost:3001/appointments').then(response => response.json()).then(data => setAppointments(data)).catch(error => setError(error)).finally(() => setLoading(false));\n  }, []);\n\n  const createAppointment = appointment => {\n    fetch(`http://localhost:3001/appointments`, {\n      method: 'POST',\n      body: JSON.stringify(appointment),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      setAppointments([...appointments, data]);\n    });\n  };\n\n  const updateAppointment = (appointment, id) => {\n    fetch(`http://localhost:3001/appointments/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(appointment)\n    }).then(response => response.json()).then(data => {\n      setAppointments(appointments.map(appt => appt.id !== id ? appt : appointment));\n    });\n  };\n\n  const deleteAppointment = id => {\n    fetch(`http://localhost:3001/appointments/${id}`, {\n      method: 'DELETE'\n    }).then(() => {\n      setAppointments(appointments.filter(appt => appt.id !== id));\n    });\n  };\n\n  return {\n    appointments,\n    loading,\n    error,\n    createAppointment,\n    updateAppointment,\n    deleteAppointment\n  };\n};\n\n_s(useAppointments, \"+eKPQT2860l/yK5/gE5RQxycCRU=\");","map":{"version":3,"names":["useEffect","useState","useAppointments","appointments","setAppointments","loading","setLoading","error","setError","undefined","require","config","fetch","then","response","json","data","catch","finally","createAppointment","appointment","method","body","JSON","stringify","headers","updateAppointment","id","map","appt","deleteAppointment","filter"],"sources":["/home/gabriel/Estudos-Paralelos/Appointments_front/appointments/src/hooks/useAppointments.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nexport const useAppointments = () => {\n  const [appointments, setAppointments] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(undefined);\n\n  require('dotenv').config();\n\n  // const URL = process.env.BACKEND_URL;\n\n  useEffect(() => {\n    setLoading(true);\n\n    fetch('http://localhost:3001/appointments')\n      .then((response) => response.json())\n      .then((data) => setAppointments(data))\n      .catch((error) => setError(error))\n      .finally(() => setLoading(false));\n  }, []);\n\n  const createAppointment = (appointment) => {\n    fetch(`http://localhost:3001/appointments`, {\n      method: 'POST',\n      body: JSON.stringify(appointment),\n      headers: { 'Content-Type': 'application/json' },\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setAppointments([...appointments, data]);\n      });\n  };\n\n  const updateAppointment = (appointment, id) => {\n    fetch(`http://localhost:3001/appointments/${id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(appointment),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setAppointments(\n          appointments.map((appt) => (appt.id !== id ? appt : appointment)),\n        );\n      });\n  };\n\n  const deleteAppointment = (id) => {\n    fetch(`http://localhost:3001/appointments/${id}`, {\n      method: 'DELETE',\n    }).then(() => {\n      setAppointments(appointments.filter((appt) => appt.id !== id));\n    });\n  };\n\n  return {\n    appointments,\n    loading,\n    error,\n    createAppointment,\n    updateAppointment,\n    deleteAppointment,\n  };\n};\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;EAAA;;EACnC,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAACQ,SAAD,CAAlC;;EAEAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,GALmC,CAOnC;;;EAEAX,SAAS,CAAC,MAAM;IACdM,UAAU,CAAC,IAAD,CAAV;IAEAM,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAESG,IAAD,IAAUZ,eAAe,CAACY,IAAD,CAFjC,EAGGC,KAHH,CAGUV,KAAD,IAAWC,QAAQ,CAACD,KAAD,CAH5B,EAIGW,OAJH,CAIW,MAAMZ,UAAU,CAAC,KAAD,CAJ3B;EAKD,CARQ,EAQN,EARM,CAAT;;EAUA,MAAMa,iBAAiB,GAAIC,WAAD,IAAiB;IACzCR,KAAK,CAAE,oCAAF,EAAuC;MAC1CS,MAAM,EAAE,MADkC;MAE1CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,WAAf,CAFoC;MAG1CK,OAAO,EAAE;QAAE,gBAAgB;MAAlB;IAHiC,CAAvC,CAAL,CAKGZ,IALH,CAKSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EALtB,EAMGF,IANH,CAMSG,IAAD,IAAU;MACdZ,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBa,IAAlB,CAAD,CAAf;IACD,CARH;EASD,CAVD;;EAYA,MAAMU,iBAAiB,GAAG,CAACN,WAAD,EAAcO,EAAd,KAAqB;IAC7Cf,KAAK,CAAE,sCAAqCe,EAAG,EAA1C,EAA6C;MAChDN,MAAM,EAAE,KADwC;MAEhDI,OAAO,EAAE;QAAE,gBAAgB;MAAlB,CAFuC;MAGhDH,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,WAAf;IAH0C,CAA7C,CAAL,CAKGP,IALH,CAKSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EALtB,EAMGF,IANH,CAMSG,IAAD,IAAU;MACdZ,eAAe,CACbD,YAAY,CAACyB,GAAb,CAAkBC,IAAD,IAAWA,IAAI,CAACF,EAAL,KAAYA,EAAZ,GAAiBE,IAAjB,GAAwBT,WAApD,CADa,CAAf;IAGD,CAVH;EAWD,CAZD;;EAcA,MAAMU,iBAAiB,GAAIH,EAAD,IAAQ;IAChCf,KAAK,CAAE,sCAAqCe,EAAG,EAA1C,EAA6C;MAChDN,MAAM,EAAE;IADwC,CAA7C,CAAL,CAEGR,IAFH,CAEQ,MAAM;MACZT,eAAe,CAACD,YAAY,CAAC4B,MAAb,CAAqBF,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAA1C,CAAD,CAAf;IACD,CAJD;EAKD,CAND;;EAQA,OAAO;IACLxB,YADK;IAELE,OAFK;IAGLE,KAHK;IAILY,iBAJK;IAKLO,iBALK;IAMLI;EANK,CAAP;AAQD,CA7DM;;GAAM5B,e"},"metadata":{},"sourceType":"module"}